html,
body {
  margin: 0;
  padding: 0;
}

body {
  background-color: rgba(0, 0, 0, 1);
}

.flex {
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
}

.wrap {
  perspective: 800px;
  height: 200px;
  margin: auto;
}

.cube.outer {
  position: relative;
  width: 200px;
  transform-style: preserve-3d;
}

.cube.inner {
  position: relative;
  top: 50px;
  left: 50px;
  width: 100px;
  transform-style: preserve-3d;
}

.cube div {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.1);

  /* background: rgba(255, 255, 255, 0); */
  text-align: center;
  font-family: sans-serif;
  font-weight: bold;
  text-transform: uppercase;
}

.side.outer {
  box-shadow: inset 0 0 30px rgba(255, 0, 255, 0.8);
  color: rgba(60, 208, 6, 1);
  width: 200px;
  height: 200px;
  font-size: 140px;
  line-height: 200px;
}

.side.inner {
  box-shadow: inset 0 0 30px rgba(60, 208, 6, 0.8);
  color: rgba(255, 0, 255, 1);
  width: 100px;
  height: 100px;
  font-size: 70px;
  line-height: 100px;
}

.side.front.outer {
  transform: translateZ(100px);
}

.side.back.outer {
  transform: rotateY(180deg) translateZ(100px);
}

.side.right.outer {
  transform: rotateY(90deg) translateZ(100px);
}

.side.left.outer {
  transform: rotateY(-90deg) translateZ(100px);
}

.side.top.outer {
  transform: rotateX(90deg) translateZ(100px);
}

.side.bottom.outer {
  transform: rotateX(-90deg) translateZ(100px);
}

.side.front.inner {
  transform: translateZ(50px);
}

.side.back.inner {
  transform: rotateY(180deg) translateZ(50px);
}

.side.right.inner {
  transform: rotateY(90deg) translateZ(50px);
}

.side.left.inner {
  transform: rotateY(-90deg) translateZ(50px);
}

.side.top.inner {
  transform: rotateX(90deg) translateZ(50px);
}

.side.bottom.inner {
  transform: rotateX(-90deg) translateZ(50px);
}

@keyframes spinOuter {
  from { transform: rotate3d(1, 1, 1, 0deg); }
  to { transform: rotate3d(1, 1, 1, 360deg); }
}

.cube.outer {
  transform-origin: 100px 100px;
  animation: spinOuter 30s infinite linear;
}

@keyframes spinInner {
  from { transform: rotate3d(1, 1, 1, 0deg); }
  to { transform: rotate3d(1, 1, 1, 360deg); }
}

.cube.inner {
  transform-origin: 50px 50px;
  animation: spinInner 30s infinite linear;
}
